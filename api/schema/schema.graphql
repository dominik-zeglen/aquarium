input PointInput {
  x: Float!
  y: Float!
}

type Point {
  x: Float!
  y: Float!
}

type SpeciesConnection {
  count: Int!
  edges: [SpeciesConnectionEdge!]!
}

type SpeciesConnectionEdge {
  node: Species!
}

type Species {
  id: Int!
  carnivore: Int!
  cells: [Cell!]!
  consumption: Int!
  diet: [String!]!
  emergedAt: Int!
  funghi: Int!
  herbivore: Int!
  name: String!
}

type CellConnection {
  count: Int!
  edges: [CellConnectionEdge!]!
}

type CellConnectionEdge {
  node: Cell!
}

type Cell {
  id: Int!
  alive: Boolean!
  bornAt: Int!
  capacity: Int!
  food: Int!
  hp: Int!
  position: Point!
  satiation: Int!
  species: Species!
}

type Query {
  area(start: PointInput!, end: PointInput!): [Cell!]!
  cell(id: Int!): Cell
  # species(id:Int!):Species

  cellList: CellConnection!
  # speciesList: SpeciesConnection!
}

schema {
  query: Query
}
